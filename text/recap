--- Objectif :

    On dispose d'un fichier fasta (une version d'un génome qui fait office de référence)
    et d'un ou plusieurs fichiers tabulés associé (.bed, .vcf ou .gff3).
    On souhaite projeter les données des fichiers tabulés sur une autre version
    de ce génome (une autre référence). C'est à dire obtenir un fichier tabulé pour
    la seconde référence avec un maximum d'informations tirés des fichiers tabulés
    de la première référence. (exon, cds, snp, indel, gene, etc).


--- Méthodes :

    Pour réaliser ceci, on va récupérer les séquences flanquantes des annotations
    fournis dans les fichiers tabulés et les mapper sur toute la seconde référence.
    Par exemple, si l'on a un SNP à la position 90 dans la première référence,
    on va récupérer la séquence de 40 à 140 (50 bp de part en part par défaut)
    que l'on va ensuite aligner sur la deuxième référence. Dans le cas d'un CDS,
    on soutrait 50 à la position de départ et on ajoute 50 à la position de fin.

    On obtient ainsi un fichier d'alignement dont il faut extraire les informations
    nécessaires pour recréer un fichier tabulé (du même format que celui passé en
    entrée).


--- Description du script tab1ToRef2.py :
    Lib :
        biopython (SeqIO)
        pybedtools
        tempfile
        argparse
        warnings
        subprocess

    Biopython permet de récupérer la taille de chaque séquence dans la première
    référence fasta, utile pour la méthode getflank dans le cas d'un fichier vcf
    (qui modifie les positions dans les fichiers tabulés).

    pybedtools permet d'encapsuler tout les fichiers tabulés et d'utiliser plusieurs
    outils de Bedtools comme getfasta (.sequence() ici) et slop (qui permet de
    récupérer les séquences et les séquences flanquantes).

    tempfile permet la création de fichier temporaire afin de limiter le nombre
    fichier crée en sortie (actuellement on ne crée qu'un fichier .sam et un .vcf
    (si le fichier tabulé en entrée est un .vcf)).

    argparse permet de gérer les arguements à l'aide d'option. On peut ainsi exécuter
    le script avec l'option -h (ou --help) pour afficher les options disponibles.
    Par exemple, l'option -t (ou --type) permet de récupérer seulement les annotations
    d'un type souhaité à partir d'un fichier .gff (-t cds,gene permet de récupérer
    tout les gènes et tout les CDS mais pas les exons,mRNA,etc).
    Trois options sont obligatoires : les deux références fasta et un fichier tabulé.
