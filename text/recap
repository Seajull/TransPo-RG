--- Introduction : 
    
   Les g√®nomes de r√©f√©rence sont de plus en plus mis √† jour gr√¢ce aux nouvelles techniques
   de s√©quen√ßage (NGS)
    
--- Objectif :

[M aJ    On dispose d'un fichier fasta (une version d'un g√©nome qui fait office de r√©f√©rence)
    et d'un ou plusieurs fichiers tabul√©s associ√© (.bed, .vcf ou .gff3).  On souhaite
    projeter les donn√©es des fichiers tabul√©s sur une autre version de ce g√©nome (une
    autre r√©f√©rence). C'est √† dire obtenir un fichier tabul√© pour la seconde r√©f√©rence
    avec un maximum d'informations tir√©s des fichiers tabul√©s de la premi√®re r√©f√©rence.
    (exon, cds, snp, indel, gene, etc).
    Cela nous permettrait de pouvoir comparer les diff√©rents fichiers d'analyses entre
    deux versions du g√®nome et de pouvoir utiliser le nouveau g√©nome avec ses annotations.

--- M√©thodes :

    Pour r√©aliser ceci, on va r√©cup√©rer les s√©quences flanquantes des annotations fournis
    dans les fichiers tabul√©s et les mapper sur toute la seconde r√©f√©rence.  Par exemple,
    si l'on a un SNP √† la position 90 dans la premi√®re r√©f√©rence, on va r√©cup√©rer la
    s√©quence de 40 √† 140 (50 bp de part en part par d√©faut) que l'on va ensuite aligner
    sur la deuxi√®me r√©f√©rence.  Dans le cas d'un CDS, on soutrait 50 √† la position de
    d√©part et on ajoute 50 √† la position de fin.

    On obtient ainsi un fichier d'alignement dont il faut extraire les informations
    n√©cessaires, c'est-√†-dire les nouvelles position, pour recr√©er un fichier tabul√© (du
    m√™me format que celui pass√© en entr√©e).


--- Description du script TransPo-RG.py :

    Lib : biopython pybedtools tempfile argparse warnings subprocess

        Biopython permet de r√©cup√©rer la taille de chaque s√©quence dans la premi√®re r√©f√©rence
    fasta, utile pour la m√©thode getflank dans le cas d'un fichier vcf (qui modifie les
    positions dans les fichiers tabul√©s).

        pybedtools permet d'encapsuler tout les fichiers tabul√©s et d'utiliser plusieurs
    outils de Bedtools comme getfasta (.sequence() ici) et slop (qui permet de r√©cup√©rer
    les s√©quences et les s√©quences flanquantes).

        tempfile permet la cr√©ation de fichier temporaire afin de limiter le nombre fichier
    cr√©e en sortie (actuellement on ne cr√©e qu'un fichier .sam et un .vcf (si le fichier
    tabul√© en entr√©e est un .vcf)).

        argparse permet de g√©rer les arguements √† l'aide d'option. On peut ainsi ex√©cuter le
    script avec l'option -h (ou --help) pour afficher les options disponibles.  Par
    exemple, l'option -t (ou --type) permet de r√©cup√©rer seulement les annotations d'un
    type souhait√© √† partir d'un fichier .gff (-t cds,gene permet de r√©cup√©rer tout les
    g√®nes et tout les CDS mais pas les exons,mRNA,etc).  Trois options sont obligatoires :
    les deux r√©f√©rences fasta et un fichier tabul√©.
  

    Fonctionnement :

        On v√©rifie d'abord que les trois fichiers obligatoires sont bien sp√©cifi√© (deux
    fichiers FASTA ainsi qu'un fichier tabul√© (GFF, VCF ou BED)) ainsi que les diff√©rentes
    versions des outils utilis√©s sont bien install√©s (bwa et bedtools).
    On v√©rifie aussi le format du fichier tabul√© pour pouvoir lui appliquer les m√©thodes
    ad√©quates en fonction. 
        
        Dans un premier temps, on r√©cup√®re les ID et tailles des chromosomes pr√©sent dans
    le fasta1; cela nous servira lorsque l'on modifiera les positions dans le fichier
    tabul√© pour inclure les r√©gions flanquantes. 
    Si le fichier tabul√© est au format GFF et que l'on souhaite filtrer les types
    d'annotations avec l'option --type, on utilise la m√©thode cutGff() qui g√©n√©rera un
    fichier temporaire de type GFF qui sera alors utilis√© √† la place du fichier pass√© en
    entr√©e. 
   
        La m√©thode getFlank() g√©n√®re un fichier temporaire tabul√© contenant les nouvelles
    positions avec les r√©gions flanquantes incluses. Pour les fichiers GFF et BED, on
    utilise l'outils slop de bedtools. Pour les fichiers VCF on doit rajouter une colonne
    pour la position stop, on cr√©e alors le fichier temporaire manuellement.
        
        L'outils getfasta de bedtools permet de s√©lectionner les s√©quences sp√©cifi√©s dans le
    fichier temporaire tabul√© g√©n√©r√© au pr√©alable. Cet outil n√©cessite que l'identifiant
    du chromosome soit similaire dans le fichier FASTA et dans le fichier tabul√©. On
    v√©rifie donc que c'est bien le cas sinon on reg√©n√©re un fichier temporaire tabul√© en
    modifiant le pr√©fixe du fichier tabul√© pour que les deux concordent.

        On r√©alise l'alignement de ces s√©quences s√©lectionn√©s sur le fichier fasta2 et on
    obtient un fichier d'alignement .SAM dont on extrait les positions moins la longueur
    des r√©gions flanquantes et on g√©n√©re un fichier tabul√© contenant ces nouvelles
    positions avec toute les annotations pr√©sentes d√®s le d√©but et que l'on ne modifie
    pas.

        Dans le cas d'un fichier GFF contenant les annotations de type CDS et mRNA (ou
    gene), la m√©thode getPosCds([file]) permet de r√©cup√©rer les postions relatives des
    CDS dans les ARNm (ou dans les g√®nes). Cela nous permet par la suite de comparer
    ces positions relative entre les deux versions du fasta pour v√©rifier l'int√©grit√©
    des ARNm (ou g√®ne) dans le fichier fasta2 et de reg√©n√®rer un fichier tabul√©
    contenant uniquement les ARNm (et/ou g√®nes) qui correspondent aux crit√®res de
    s√©l√©ctions. 
        
--- Probl√®mes rencontr√©s :

    Gestion des missmatchs lors du passage du fichier d'alignement √† un fichier tabul√©.

    Annotations en d√©but ou en fin de s√©quence ne sont pas prise en compte car elles sont
    plus courtes (exemple : SNP √† la position 20, avec 50 bp de flank on extrait une
    s√©quence de 71 bp, faut-il consid√©rer les 29 manquantes comme des missmatch ? Ou
    simuler les matchs pour arriver √† 101M ?).
